@using Books.Models
@model BooksSearchViewModel
@{
    ViewBag.Title = "Список книг";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section scripts
{
<script type="text/javascript">
        $(function() {
            $(".modal").on('hidden.bs.modal',
                function() {
                    //var kendoUpload = $("#files").data("kendoUpload");
                    //if (kendoUpload.getFiles()) {
                    //    kendoUpload.removeAllFiles();
                    //}
                    $(this).removeData('bs.modal');
                    $('#child_Value_SexId').prop("disabled", true);

                    $("#childInfoCreateEditForm  #PerinatalRiskGestWeek").inputmask('integer',
                        { min: '1', max: '99', allowPlus: false, allowMinus: false, unmaskAsNumber: true }
                    );
                    $("#childInfoCreateEditForm  #PerinatalRiskGestDays").inputmask('integer',
                        { min: '1', max: '99', allowPlus: false, allowMinus: false, unmaskAsNumber: true }
                    );
                    $("#childInfoCreateEditForm  #MotherHeight").inputmask('integer',
                        { min: '1', max: '250', allowPlus: false, allowMinus: false, unmaskAsNumber: true }
                    );
                });
        });

        function OnSuccessCreateEditBook(data) {
            $('#createEditBookForm').closest('.modal').modal('hide');
            $('#bookListForm').submit();
            showAlertMessage($('#successAlert'), data.message);
        }

        function onFailureFormDefault(data) {
            if ($("#createEditBookForm").find("#errorAlertFixed").length == 0) {
                $("#createEditBookForm").prepend($("#errorAlertFixed").clone());
            }
            DisplayAlertErrors("createEditBookForm",
                JSON.parse(data.responseText).errors,
                $("#createEditBookForm").find("#errorAlertFixed"));
        }

        function onSuccessDeleteBook(data) {
            $('#bookListForm').submit();
            showAlertMessage($('#successAlert'), data.message);
        }

        function onFailureDeleteBook(data) {
            DisplayAlertErrors("createEditBookForm", JSON.parse(data.responseText).errors, $("#bookListForm"));
        }

    function orderBooks(nameProp) {
        if ($("#@Html.IdFor(m => m.OrderType)").val() && $("#@Html.IdFor(m => m.OrderProp)").val() == nameProp)
            $("#@Html.IdFor(m => m.OrderType)").val('');
        else
            $("#@Html.IdFor(m => m.OrderType)").val('Asc');

            $("#@Html.IdFor(m => m.OrderProp)").val(nameProp);



            $('#bookListForm').submit();
        }
</script>
}

<div class="row">
    @*<div class="col-md-6">

        @using (Ajax.BeginForm("BookListData", "Book", new { orderProp = Model.OrderProp, orderType = Model.OrderType }, new AjaxOptions { UpdateTargetId = "gridBooks" }, new { id = "bookListForm" }))
        {
            @Html.HiddenFor(model => model.OrderProp)
            @Html.HiddenFor(model => model.OrderType)
            <div id="gridBooks">
                @Html.Partial("/Views/Book/_BookList.cshtml", Model.Books)
            </div>
        }
    </div>*@
</div>
<div class="row">
    <div class="col-md-6">
        <a type="button" class="btn btn-primary" data-toggle="modal" data-target="#dialogModalLg" href="@Url.Action("CheckStart", "Book")">
            Запустить проверку.
        </a>
    </div>
</div>