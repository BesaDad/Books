----------------------------------------------------------------------------------------------------------------------------
БД.
БД на облачном PostgreSql AWS. Есть три таблицы: Работники, Запросы, Очередь.
Работник. Имеет поля: 
				Имя сотрудника, 
				Тип сотрудника (0 - operator, 1 - manager, 2 - director)

Запросы. Имеет поля: 
				Имя клиента, 
				Статус обращение (0 - новый, 1 - в процессе, 2 - передан, 3 - обработан, 4 – отменен. По умол. - 0), 
				Дата запроса, 
				Эл. Почта клиента, 
				Телефон клиента, 
				Текст обращения.

События. Имеет поля: 
				Id сотрудника, 
				Id обращения, 
				Текущий стаус обработки обращения (1 - в процессе, 2 - передан, 3 - обработан, 4 – отменен.), 
				Время начала работы над обращением, 
				Время завершения работы над обращением.
------------------------------------------------------------------------------------------------------------------------------
Новый поступивший запрос может автоматически назначиться тому или иному сотруднику согласно усдовиям задания. 
Сотрудник может завершить, отменить, либо передать обращение другому свободному сотруднику. 
В таком случае ему назначается новое обращения, если такое есть.
----------------------------------------------------------------------------------------------------------------------------
Веб-интерфейс.
Для создания обращения добавлена простая веб-форма.
На странице «Статистика» выводятся списки всех сотрудников, новых запросов, обработанных запросов.
Сотрудника можно редактировать. Запрос можно отменять.
----------------------------------------------------------------------------------------------------------------------------
Реализация.
Для работы с данными используется Entity Framework. 
В проектировании использовано внедрение зависимостей (Dependency Injection).
Для работы с перечислениями добавлены метода расширения (extension).
Параметры Tm и Td заданы в Web.config.
При завершении той или иной операции выводится alert окно об успешном, либо неудачном завершении.
Для ожидания времени Tm и Td используются таймеры посредством Task.Delay.
Upd: добавлено консольное приложение для генерирования обращений и раотников. Ссылка:
https://github.com/BesaDad/ReferGenerator
----------------------------------------------------------------------------------------------------------------------------
Комменатрии.
Веб-интерфейс требует конечно не совсем пригляден, но в целом работает корректно. 
При изменениях можно было бы обновлять только конкретные области, допустим с помошью grid-ов.
При изменении данных, возможно следует использовать блокировки для избежания конфликтов. 
Добавить веб-сервис немного не хватило времени. Но добавлена форма содания запросов. 
Есть некоторые готовые записи в бд в результате тестирований.



